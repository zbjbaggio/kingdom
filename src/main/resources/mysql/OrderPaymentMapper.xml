<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kingdom.system.mapper.OrderPaymentMapper">
    
    <resultMap type="com.kingdom.system.data.entity.OrderPayment" id="OrderPaymentResult">
        <result property="id"    column="id"    />
        <result property="createTime"    column="create_time"    />
        <result property="lastModified"    column="last_modified"    />
        <result property="payType"    column="pay_type"    />
        <result property="payAmount"    column="pay_amount"    />
        <result property="payNo"    column="pay_no"    />
        <result property="orderId"    column="order_id"    />
    </resultMap>
	
	<sql id="selectOrderPaymentVo">
        select id, create_time, last_modified, pay_type, pay_amount, pay_no, order_id from t_order_payment
    </sql>
	
    <select id="selectOrderPaymentList" parameterType="com.kingdom.system.data.entity.OrderPayment" resultMap="OrderPaymentResult">
        <include refid="selectOrderPaymentVo"/>
        <where>  
            <if test="id != null "> and id = #{id}</if>
             <if test="createTime != null "> and create_time = #{createTime}</if>
             <if test="lastModified != null "> and last_modified = #{lastModified}</if>
             <if test="payType != null "> and pay_type = #{payType}</if>
             <if test="payAmount != null "> and pay_amount = #{payAmount}</if>
             <if test="payNo != null  and payNo != '' "> and pay_no = #{payNo}</if>
             <if test="orderId != null "> and order_id = #{orderId}</if>
         </where>
    </select>
    
    <select id="selectOrderPaymentById" parameterType="Long" resultMap="OrderPaymentResult">
        <include refid="selectOrderPaymentVo"/>
        where id = #{id}
    </select>

    <select id="selectOrderPaymentListByOrderId" resultMap="OrderPaymentResult">
        <include refid="selectOrderPaymentVo"/>
        where order_id = #{orderId}
    </select>

    <insert id="insertOrderPayment" parameterType="com.kingdom.system.data.entity.OrderPayment">
        insert into t_order_payment
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null  ">id,</if>
			<if test="createTime != null  ">create_time,</if>
			<if test="lastModified != null  ">last_modified,</if>
			<if test="payType != null  ">pay_type,</if>
			<if test="payAmount != null  ">pay_amount,</if>
			<if test="payNo != null  and payNo != ''  ">pay_no,</if>
			<if test="orderId != null  ">order_id,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null  ">#{id},</if>
			<if test="createTime != null  ">#{createTime},</if>
			<if test="lastModified != null  ">#{lastModified},</if>
			<if test="payType != null  ">#{payType},</if>
			<if test="payAmount != null  ">#{payAmount},</if>
			<if test="payNo != null  and payNo != ''  ">#{payNo},</if>
			<if test="orderId != null  ">#{orderId},</if>
         </trim>
    </insert>

    <insert id="insertOrderPayments">
        insert into t_order_payment
        <trim prefix="(" suffix=")" suffixOverrides=",">
            create_time, pay_type, pay_amount, pay_no, order_id
        </trim>
        values
        <foreach collection="list" item="item" index= "index" separator =",">
            (
            NOW(), #{item.payType}, #{item.payAmount}, #{item.payNo}, #{item.orderId}
            )
        </foreach>
    </insert>

    <update id="updateOrderPayment" parameterType="com.kingdom.system.data.entity.OrderPayment">
        update t_order_payment
        <trim prefix="SET" suffixOverrides=",">
            <if test="createTime != null  ">create_time = #{createTime},</if>
            <if test="lastModified != null  ">last_modified = #{lastModified},</if>
            <if test="payType != null  ">pay_type = #{payType},</if>
            <if test="payAmount != null  ">pay_amount = #{payAmount},</if>
            <if test="payNo != null  and payNo != ''  ">pay_no = #{payNo},</if>
            <if test="orderId != null  ">order_id = #{orderId},</if>
        </trim>
        where id = #{id}
    </update>

	<delete id="deleteOrderPaymentById" parameterType="Long">
        delete from t_order_payment where id = #{id}
    </delete>
	
    <delete id="deleteOrderPaymentByIds" parameterType="String">
        delete from t_order_payment where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    
</mapper>